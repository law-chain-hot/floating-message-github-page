{"version":3,"sources":["components/HOC/requireAuth.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","../node_modules/semantic-ui-react/dist/es/views/Card/Card.js","components/Card.js","components/GetMessage.js"],"names":["requireAuth","ChildComponent","connect","state","auth","authenticated","props","useAuth0","isAuthenticated","user","useEffect","history","push","CardDescription","children","className","content","textAlign","classes","cx","useTextAlignProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","CardHeader","CardMeta","CardContent","description","extra","header","meta","useKeyOnly","createShorthand","val","autoGenerateKey","CardGroup","centered","doubling","items","itemsPerRow","stackable","useWidthProp","itemsJSX","_map","item","key","join","Card","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","handleClick","e","onClick","_inheritsLoose","prototype","render","_this$props","color","fluid","href","image","link","raised","Image","create","defaultProps","ui","wrapped","Component","Content","Description","Group","Header","Meta","useStyles","makeStyles","card","width","des","minHeight","wordBreak","display","justifyContent","alignItems","extraRight","flexDirection","CardExampleExtraContent","name","like","time","id","useState","likenum","setLikenum","disable","setDisable","axios","post","process","as","labelPosition","disabled","Icon","btn","Label","basic","pointing","container","padding","database","setDatabase","message","setMessage","a","get","response","data","getData","Button","variant","index","Math","floor","random","currMes","splice","_id","generateMessage"],"mappings":"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","file":"static/js/9.d3e90a05.chunk.js","sourcesContent":["// name begins with lowercase, export by default a function\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst requireAuth = (ChildComponent) => {\n    const ComposedComponent = (props) => {\n        const { user, isAuthenticated } = useAuth0();\n\n\n        useEffect(() => {\n            const shouldNavigateAway = () => {\n                if (!props.auth && !isAuthenticated) {\n                    props.history.push('/')\n                }\n            }\n            shouldNavigateAway()\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [props.auth])\n\n        return <ChildComponent {...props} />\n    }\n\n    const mapStateToProps = (state) => {\n        return {\n            auth: state.auth.authenticated\n        }\n    }\n\n    return connect(mapStateToProps)(ComposedComponent)\n}\n\nexport default requireAuth\n\n\n// Imagine we are in CommentBox.js\n// Using the HOC to add the requireAuth to goal component, \n// Like injecting the component into project","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Card, _Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        centered = _this$props.centered,\n        children = _this$props.children,\n        className = _this$props.className,\n        color = _this$props.color,\n        content = _this$props.content,\n        description = _this$props.description,\n        extra = _this$props.extra,\n        fluid = _this$props.fluid,\n        header = _this$props.header,\n        href = _this$props.href,\n        image = _this$props.image,\n        link = _this$props.link,\n        meta = _this$props.meta,\n        onClick = _this$props.onClick,\n        raised = _this$props.raised;\n    var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n    var rest = getUnhandledProps(Card, this.props);\n    var ElementType = getElementType(Card, this.props, function () {\n      if (onClick) return 'a';\n    });\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), Image.create(image, {\n      autoGenerateKey: false,\n      defaultProps: {\n        ui: false,\n        wrapped: true\n      }\n    }), (description || header || meta) && /*#__PURE__*/React.createElement(CardContent, {\n      description: description,\n      header: header,\n      meta: meta\n    }), extra && /*#__PURE__*/React.createElement(CardContent, {\n      extra: true\n    }, extra));\n  };\n\n  return Card;\n}(Component);\n\nCard.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"];\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};\nCard.Content = CardContent;\nCard.Description = CardDescription;\nCard.Group = CardGroup;\nCard.Header = CardHeader;\nCard.Meta = CardMeta;","import React, { useState, useEffect } from 'react'\nimport { Card, Icon, Button, Label } from 'semantic-ui-react'\nimport axios from 'axios'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  card: {\n    width: '60% !important',\n  },\n  des: {\n    minHeight: '100px',\n    wordBreak: 'break-word',\n  },\n  extra: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  extraRight: {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n  },\n})\n\nconst IP = process.env.REACT_APP_SERVER\n\nconst CardExampleExtraContent = (props) => {\n  const classes = useStyles()\n  const { name, content, like, time, id } = props\n\n  const [likenum, setLikenum] = useState(like)\n  const [disable, setDisable] = useState(false)\n\n  useEffect(() => {\n    setLikenum(like)\n  }, [props])\n\n  useEffect(() => {\n    setDisable(false)\n  }, [props])\n\n  const handleClick = () => {\n    setLikenum(likenum + 1)\n    setDisable(true)\n    axios.post(`${IP}/like`, {\n      id: id,\n      like: likenum,\n    })\n  }\n\n  const btn = (disable) => {\n    return disable ? (\n      <Button color=\"red\" disabled>\n        <Icon name=\"heart\" />\n        Like\n      </Button>\n    ) : (\n      <Button color=\"red\" onClick={handleClick}>\n        <Icon name=\"heart\" />\n        Like\n      </Button>\n    )\n  }\n\n  return (\n    <Card className={classes.card}>\n      <Card.Content header={name} />\n      <Card.Content description={content} className={classes.des} />\n      <Card.Content extra className={classes.extra}>\n        <Button as=\"div\" labelPosition=\"right\">\n          {btn(disable)}\n          <Label as=\"a\" basic color=\"red\" pointing=\"left\">\n            {likenum}\n          </Label>\n        </Button>\n        <div>\n          <Icon name=\"user\" /> {time}\n        </div>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default CardExampleExtraContent\n","import React, { useState, useEffect } from \"react\"\nimport { reduxForm, Field } from \"redux-form\"\nimport { compose } from \"redux\"\nimport axios from \"axios\"\n\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport requireAuth from \"./HOC/requireAuth\"\n\nimport Card from \"./Card\"\n\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"5%\",\n  },\n})\n\nconst IP = process.env.REACT_APP_SERVER\n\n// import { useAuth0 } from \"@auth0/auth0-react\";\n\nconst GetMessage = (props) => {\n  // const { handleSubmit } = props\n  const classes = useStyles()\n  // const { user, isAuthenticated } = useAuth0();\n  const [database, setDatabase] = useState([])\n  const [message, setMessage] = useState({})\n\n  // console.log(\"GetMessage -> database\", database)\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await axios.get(`${IP}/getmessage`)\n      setDatabase(response.data)\n    }\n    getData()\n  }, [])\n\n  const handleClick = () => {\n    // generateMessage(database)\n    if (database.length === 0) return\n    const index = Math.floor(Math.random() * database.length)\n    const currMes = database.splice(index, 1)[0]\n    setMessage(currMes)\n  }\n\n  const generateMessage = (message) => {\n    return <Card name={message.name} content={message.content} like={message.like || 0} id={message._id} />\n  }\n\n  return (\n    <>\n      <div className={classes.container}>\n        <h4>Random Message From The Flow</h4>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\n          Get message!\n        </Button>\n        {generateMessage(message)}\n      </div>\n    </>\n  )\n}\n\nexport default requireAuth(GetMessage)\n"],"sourceRoot":""}